name: Build and Release

on:
  push:
    branches: [main, develop]
    tags: ["v*"]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 45

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: |
            requirements.txt
            src/python/cut-quiet-parts/requirements.txt

      - name: Install FFmpeg (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install -y ffmpeg

      - name: Install FFmpeg (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install ffmpeg

      - name: Install FFmpeg (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install ffmpeg

      - name: Install Node.js dependencies
        run: npm ci

      - name: Install minimal Python dependencies
        run: |
          pip install --upgrade pip setuptools wheel
        continue-on-error: true

      - name: Build application (skip Python for faster builds)
        run: npm run build

      - name: Build distributables (Windows x64)
        run: npm run dist:quick -- --win
        if: matrix.os == 'windows-latest'
        timeout-minutes: 20

      - name: Build distributables (macOS)
        run: npm run dist:quick -- --mac
        if: matrix.os == 'macos-latest'
        timeout-minutes: 20

      - name: Build distributables (Linux)
        run: npm run dist:quick -- --linux
        if: matrix.os == 'ubuntu-latest'
        timeout-minutes: 20
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.os }}-build
          path: |
            release/**/*
            !release/win-unpacked/**/*
            !release/mac/**/*
            !release/linux-unpacked/**/*

  release:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/windows-latest-build/**/*
            artifacts/macos-latest-build/**/*
            artifacts/ubuntu-latest-build/**/*
          draft: false
          prerelease: contains(github.ref, 'beta') || contains(github.ref, 'alpha')
          generate_release_notes: true
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
